---
- hosts: all
  gather_facts: True
  remote_user: root
  tasks:
  #  - name: Update cache
  #    apt:
  #      update_cache: yes
     
    - name: Install packages
      package:
        name: "{{ item }}"
      with_items:
        - nginx
        - git
        - curl
        - ufw
    # Otra forma de hacelro
    #- name: Install packages
    #  package:
    #    name: "{{ item }}"
    #  loop:
    #    - nginx
    #    - git
    #    - curl
    #    - ufw
    - name: Configure Nginx
      template:
        src: conf.template
        dest: /etc/nginx/conf.d/mi_web.conf
        mode: 0400
      #notify: CONFIGURACION_CAMBIADA
      register: configuracion
      
    - name: Reiniciar nginx
      service:
        nginx: nginx
        state: restarted
      when: configuracion is changed
        
    - name: Clonar web
      git:
        repo: https://github.com/IvanciniGT/webEjemploAnsible
        dest: "{{ nginx_web_path }}"

    - name: Make sure a service is running
      service:
        state: started
        name: nginx
  
 #   - name: Make sure a UFW service is running
 #     ufw:
 #       state: enabled
 #       policy: deny
        
    - name: Allow all access to tcp port 80
      ufw:
       rule: allow
       port: "{{ nginx_port }}"
       proto: tcp

  #  - name: Comprobar que el puerto 80 está ejecutando
  #    shell: 
  #      cmd: netstat -lnt | grep :80
  #    register: resultado_puerto 
  #    failed_when: "'LISTEN' not in resultado_puerto.stdout"
      
    - name: Waits for port 80 of any IP to close active connections
      wait_for:
        host: "{{ ansible_hostname }}"
        port: "{{ nginx_port }}"
        delay: 2
        state: started
        timeout: 10
        connect_timeout: 2
      
    - name: GET request to Nginx
      uri:
       url: "http://{{ nginx_server_name }}:{{ nginx_port }}"
      register: result
      
    - name: Check Nginx response
      debug:
        msg: |
          "Nginx está corriendo bien"
      failed_when: 
        - result.status != 200
        - "{{ mensaje_nginx }} not in result.stdout"

  #handlers:
  #  - name: Restart nginx
  #    service:
  #      state: restarted
  #      name: nginx
  #    listen: CONFIGURACION_CAMBIADA
